// Solidity program to demonstrate 
// how to deploy a library
pragma solidity ^0.5.0;

//https://www.geeksforgeeks.org/solidity-libraries/#:~:text=A%20library%20contract%20is%20defined,as%20it%20cannot%20store%20ethers.
// Defining Library
library LibExample 
{

  // Defining structure
    struct Constants {

        // Declaring variables
        uint Pi;             
        uint EulerNb;        
        uint PythagoraConst; 
        uint TheodorusConst; 
    }

    // Function to power of 
    // an unsigned integer
    function pow(
      uint a, uint b) public view returns (
      uint, address) 
    {
        return (a ** b, address(this));
    }

    //https://ethereum.stackexchange.com/questions/60684/i-want-get-random-number-between-100-999-as-follows
    //Basically you get a number from 0 - 899, and then add 100 to match your offset.
    function random() internal returns (uint) 
    {
        uint randomnumber = uint(keccak256(abi.encodePacked(now, msg.sender, nonce))) % 900;
        randomnumber = randomnumber + 100;
        nonce++;
        return randomnumber;
    }
}

// Defining calling contract
contract LibraryExample {
    
    // Deploying library using 
    // "for" keyword
    using LibExample for unit;
    address owner = address(this);
    
    // Calling function pow to 
    // calculate power 
    function getPow(
      uint num1, uint num2) public view returns (
      uint, address) {
        return num1.pow(num2);
    }
}